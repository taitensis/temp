---
// üö® Assurez-vous d'avoir les imports corrects pour vos composants shadcn
// qui sont bas√©s sur leurs √©quivalents React/Vue
import { Button } from "@/components/ui/button";
import { Drawer, DrawerContent, DrawerTrigger, DrawerHeader, DrawerTitle, DrawerDescription, DrawerFooter, DrawerClose } from "@/components/ui/drawer";
import { SlidersHorizontal } from 'lucide-astro'; // Ic√¥ne pour le bouton

// Importez votre composant qui contient tous les champs de formulaire (recherche, tags, etc.)
import RecipeFilters from './RecipeFilters.astro'; 

interface Props {
    // Vous pouvez passer la langue si les labels de vos filtres doivent √™tre traduits
    lang?: 'fr' | 'en'; 
}

const { lang = 'fr' } = Astro.props;

// Traductions simples pour cet exemple
const t = {
    trigger: lang === 'fr' ? 'Filtrer les Recettes' : 'Filter Recipes',
    title: lang === 'fr' ? 'Options de Filtrage' : 'Filter Options',
    description: lang === 'fr' ? 'Affinez votre recherche de recettes.' : 'Refine your recipe search.',
    apply: lang === 'fr' ? 'Appliquer les Filtres' : 'Apply Filters'
};
---

{/* Ce div masque le composant sur desktop (lg:hidden) et le r√©v√®le sur mobile/tablette.
    Ceci remplace la Sidebar statique pour les petits √©crans. 
*/}
<div class="lg:hidden">
    
    {/* Le composant Drawer doit √™tre hydrat√© c√¥t√© client pour fonctionner.
        Utilisez client:load pour le charger apr√®s le rendu initial.
    */}
    <Drawer client:load> 
        
        {/* Le Trigger : Le bouton visible sur mobile */}
        <DrawerTrigger asChild>
            <Button variant="outline" class="w-full justify-start">
                <SlidersHorizontal class="w-4 h-4 mr-2" />
                {t.trigger}
            </Button>
        </DrawerTrigger>

        {/* Le Contenu du Tiroir (La Sidebar Mobile) */}
        <DrawerContent>
            <div class="mx-auto w-full max-w-sm overflow-y-auto">
                <DrawerHeader>
                    <DrawerTitle>{t.title}</DrawerTitle>
                    <DrawerDescription>{t.description}</DrawerDescription>
                </DrawerHeader>

                {/* Contenu des Filtres : C'est ici que RecipeFilters est affich√©. 
                    Notez l'absence de padding-bottom pour le formulaire qui sera dans le Drawer.
                */}
                <div class="p-4 space-y-4">
                    <RecipeFilters lang={lang} />
                </div>
                
                <DrawerFooter>
                    {/* Bouton pour fermer le drawer et potentiellement appliquer la recherche */}
                    <DrawerClose asChild>
                        <Button>
                            {t.apply}
                        </Button>
                    </DrawerClose>
                </DrawerFooter>
            </div>
        </DrawerContent>
    </Drawer>
</div>